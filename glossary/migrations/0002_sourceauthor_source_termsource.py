# Generated by Django 5.1.3 on 2025-08-16 12:13

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('glossary', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='SourceAuthor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Person or organization full name', max_length=300)),
                ('is_organization', models.BooleanField(default=False, help_text='If author is an organization, check. This reflects in the author schema that it is an organization rather than a Person.')),
            ],
        ),
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
                ('description', models.TextField(blank=True, help_text='Optional, probably for schema.')),
                ('copyright_year', models.PositiveIntegerField(blank=True)),
                ('url', models.URLField(blank=True)),
                ('creative_work_type', models.CharField(choices=[('Book', 'Book'), ('Article', 'Article'), ('ScholarlyArticle', 'Scholarly Article'), ('NewsArticle', 'News Article'), ('Movie', 'Movie'), ('TVSeries', 'TV Series'), ('WebSite', 'Website'), ('WebPage', 'Webpage'), ('SocialMediaPosting', 'Social Media Posting'), ('Photograph', 'Photograph'), ('Painting', 'Painting')], max_length=50)),
                ('author', models.ManyToManyField(blank=True, to='glossary.sourceauthor')),
            ],
        ),
        migrations.CreateModel(
            name='TermSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(default=0)),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='glossary.source')),
                ('term', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='glossary.term')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
    ]
